// @flow
import type {Node} from 'react'

export type MaterialGroup = {
  id: string, // Generated by the frontend
  name: string,
  materials: Array<{
    id: string, // Generated by the frontend
    name: string,
    description: string,
    properties: {
      dishwasherSafe: boolean,
      flexibility: number,
      foodSafe: boolean,
      freedomOfDesign: number,
      interlockingAndEnclosedParts: boolean,
      levelOfDetail: number,
      materialSpec: string,
      postProcessing: number,
      printingMethod: string,
      recyclable: boolean,
      waterproof: boolean
    },
    finishGroups: Array<{
      id: string, // Generated by the frontend
      name: string,
      materialName: string,
      summary: string,
      featuredImage: string,
      materialConfigs: Array<{
        id: string,
        name: string,
        color: string,
        colorCode: string,
        colorImage: string
      }>
    }>
  }>
}

export type UploadingModel = {
  fileId: string,
  fileName: string,
  fileSize: number,
  progress: number
}

export type BackendModel = {
  modelId: string,
  fileName: string,
  fileUnit: 'mm' | 'cm' | 'in',
  area: ?number,
  volume: ?number,
  dimensions: {
    x: ?number,
    y: ?number,
    z: ?number
  },
  thumbnailUrl: string
}

export type Model = BackendModel & {
  quantity: number,
  fileSize: number
}

export type Location = {
  city: string,
  zipCode: string,
  stateCode: string,
  countryCode: string
}

export type Address = Location & {
  firstName: string,
  lastName: string,
  street: string,
  houseNumber: string,
  addressLine2: string
}

export type UserState = {
  userId: ?string,
  shippingAddress: ?Address,
  currency: string
}

export type CoreState = {
  models: Array<Model>,
  uploadingModels: Array<UploadingModel>,
  materialGroups: Array<MaterialGroup>
}

export type ModalState = {
  isOpen: boolean,
  isCloseable: boolean,
  content: ?Node
}

export type InitState = {
  isLoading: boolean
}

export type State = {
  core: CoreState,
  modal: ModalState,
  user: UserState,
  init: InitState,
  routing: any, // Managed by react-router-redux
  form: any // Managed by redux-form
}

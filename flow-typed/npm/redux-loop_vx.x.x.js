// flow-typed signature: a70137d16c68ba9052a785b3cf969c8b
// flow-typed version: <<STUB>>/redux-loop_v^4.2.4/flow_v0.59.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'redux-loop'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'redux-loop' {

  declare type Reducer<S, A> = (state: S, action: A) => S

  declare type ExtractStateType = <S, A>(r: (state: S, action: A) => any) => S

  declare function combineReducers<Reducers: Object, State: $ObjMap<Reducers, ExtractStateType>, Action>(
    reducersMap:   Reducers,
    initialState?: $Shape<State>,
    accessor?:     (state: State, key: $Keys<State>) => any,
    modifier?:     (state: State, key: $Keys<State>, value: any) => any,
  ): (state: State, action: Action) => State

  // This is a simple typedefinition checking only the state
  declare function loop<S>(state: S, effect: any): S;

  declare function Cmd(cmd: any, options: any): any;

  declare function getEffect<S>(loop: S): any;
  declare function getModel<S>(loop: S): S;
  declare function install(): Function;
  declare function isLoop<S>(loop: S): boolean;
  declare function liftState<S>(state: S): S;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'redux-loop/dist/redux-loop' {
  declare module.exports: any;
}

declare module 'redux-loop/dist/redux-loop.min' {
  declare module.exports: any;
}

declare module 'redux-loop/es/cmd' {
  declare module.exports: any;
}

declare module 'redux-loop/es/combineReducers' {
  declare module.exports: any;
}

declare module 'redux-loop/es/errors' {
  declare module.exports: any;
}

declare module 'redux-loop/es/index' {
  declare module.exports: any;
}

declare module 'redux-loop/es/install' {
  declare module.exports: any;
}

declare module 'redux-loop/es/loop' {
  declare module.exports: any;
}

declare module 'redux-loop/es/merge-child-reducers' {
  declare module.exports: any;
}

declare module 'redux-loop/es/utils' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/cmd' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/combineReducers' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/errors' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/index' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/install' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/loop' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/merge-child-reducers' {
  declare module.exports: any;
}

declare module 'redux-loop/lib/utils' {
  declare module.exports: any;
}

declare module 'redux-loop/src/cmd' {
  declare module.exports: any;
}

declare module 'redux-loop/src/combineReducers' {
  declare module.exports: any;
}

declare module 'redux-loop/src/errors' {
  declare module.exports: any;
}

declare module 'redux-loop/src/index' {
  declare module.exports: any;
}

declare module 'redux-loop/src/install' {
  declare module.exports: any;
}

declare module 'redux-loop/src/loop' {
  declare module.exports: any;
}

declare module 'redux-loop/src/merge-child-reducers' {
  declare module.exports: any;
}

declare module 'redux-loop/src/utils' {
  declare module.exports: any;
}

// Filename aliases
declare module 'redux-loop/dist/redux-loop.js' {
  declare module.exports: $Exports<'redux-loop/dist/redux-loop'>;
}
declare module 'redux-loop/dist/redux-loop.min.js' {
  declare module.exports: $Exports<'redux-loop/dist/redux-loop.min'>;
}
declare module 'redux-loop/es/cmd.js' {
  declare module.exports: $Exports<'redux-loop/es/cmd'>;
}
declare module 'redux-loop/es/combineReducers.js' {
  declare module.exports: $Exports<'redux-loop/es/combineReducers'>;
}
declare module 'redux-loop/es/errors.js' {
  declare module.exports: $Exports<'redux-loop/es/errors'>;
}
declare module 'redux-loop/es/index.js' {
  declare module.exports: $Exports<'redux-loop/es/index'>;
}
declare module 'redux-loop/es/install.js' {
  declare module.exports: $Exports<'redux-loop/es/install'>;
}
declare module 'redux-loop/es/loop.js' {
  declare module.exports: $Exports<'redux-loop/es/loop'>;
}
declare module 'redux-loop/es/merge-child-reducers.js' {
  declare module.exports: $Exports<'redux-loop/es/merge-child-reducers'>;
}
declare module 'redux-loop/es/utils.js' {
  declare module.exports: $Exports<'redux-loop/es/utils'>;
}
declare module 'redux-loop/lib/cmd.js' {
  declare module.exports: $Exports<'redux-loop/lib/cmd'>;
}
declare module 'redux-loop/lib/combineReducers.js' {
  declare module.exports: $Exports<'redux-loop/lib/combineReducers'>;
}
declare module 'redux-loop/lib/errors.js' {
  declare module.exports: $Exports<'redux-loop/lib/errors'>;
}
declare module 'redux-loop/lib/index.js' {
  declare module.exports: $Exports<'redux-loop/lib/index'>;
}
declare module 'redux-loop/lib/install.js' {
  declare module.exports: $Exports<'redux-loop/lib/install'>;
}
declare module 'redux-loop/lib/loop.js' {
  declare module.exports: $Exports<'redux-loop/lib/loop'>;
}
declare module 'redux-loop/lib/merge-child-reducers.js' {
  declare module.exports: $Exports<'redux-loop/lib/merge-child-reducers'>;
}
declare module 'redux-loop/lib/utils.js' {
  declare module.exports: $Exports<'redux-loop/lib/utils'>;
}
declare module 'redux-loop/src/cmd.js' {
  declare module.exports: $Exports<'redux-loop/src/cmd'>;
}
declare module 'redux-loop/src/combineReducers.js' {
  declare module.exports: $Exports<'redux-loop/src/combineReducers'>;
}
declare module 'redux-loop/src/errors.js' {
  declare module.exports: $Exports<'redux-loop/src/errors'>;
}
declare module 'redux-loop/src/index.js' {
  declare module.exports: $Exports<'redux-loop/src/index'>;
}
declare module 'redux-loop/src/install.js' {
  declare module.exports: $Exports<'redux-loop/src/install'>;
}
declare module 'redux-loop/src/loop.js' {
  declare module.exports: $Exports<'redux-loop/src/loop'>;
}
declare module 'redux-loop/src/merge-child-reducers.js' {
  declare module.exports: $Exports<'redux-loop/src/merge-child-reducers'>;
}
declare module 'redux-loop/src/utils.js' {
  declare module.exports: $Exports<'redux-loop/src/utils'>;
}
